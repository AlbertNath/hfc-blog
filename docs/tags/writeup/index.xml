<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Writeup on Hackers Fight Club Blog</title>
    <link>https://albertnath.github.io/hfc-blog/tags/writeup/</link>
    <description>Recent content in Writeup on Hackers Fight Club Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 20 Apr 2025 13:21:10 -0600</lastBuildDate>
    <atom:link href="https://albertnath.github.io/hfc-blog/tags/writeup/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HTB Cyber Apocalypse 2025 | CyberAttack WriteUp</title>
      <link>https://albertnath.github.io/hfc-blog/posts/htb-cyber-apocalypse-2025/</link>
      <pubDate>Sun, 20 Apr 2025 13:21:10 -0600</pubDate>
      <guid>https://albertnath.github.io/hfc-blog/posts/htb-cyber-apocalypse-2025/</guid>
      <description>&lt;h1 id=&#34;htb-cyber-apocalypse-2025--cyberattack-writeup&#34;&gt;HTB Cyber Apocalypse 2025 | CyberAttack WriteUp&lt;/h1&gt;&#xA;&lt;h2 id=&#34;introducción&#34;&gt;Introducción&lt;/h2&gt;&#xA;&lt;p&gt;Recientemente se llevó a cabo el CTF anual de HackTheBox &amp;ldquo;Cyber Apocalypse&amp;rdquo;. Uno de los retos que más me gustó dentro de la categoría &amp;ldquo;Web&amp;rdquo; fue &amp;ldquo;Cyber Attack&amp;rdquo;. Como todos los retos de este CTF, este está ambientado en el mundo fantástico de Eldoria. Se nos presenta una aplicación web destinada a atacar a los enemigos de Malakar.&lt;/p&gt;&#xA;&lt;p&gt;A grandes rasgos, el reto requería explotar una inyección CRLF, una vulnerabilidad de tipo SSRF y una inyección de comandos. Adicionalmente para lograr resolverlo, fue necesario comprender algo llamado &amp;ldquo;ambigüedad semántica&amp;rdquo; en servidores Apache y aplicar un pequeño truco en IPv6 para conseguir inyectar comandos. Para resolver el reto, se nos provee el código fuente de la aplicación y archivos de configuración del servidor web.&lt;/p&gt;</description>
    </item>
    <item>
      <title>HTB-Init-test-skills</title>
      <link>https://albertnath.github.io/hfc-blog/posts/htb-init-test-skills/</link>
      <pubDate>Sun, 16 Feb 2025 09:12:30 -0600</pubDate>
      <guid>https://albertnath.github.io/hfc-blog/posts/htb-init-test-skills/</guid>
      <description>&lt;h1 id=&#34;module-getting-started-knowledge-check&#34;&gt;Module Getting Started: Knowledge check&lt;/h1&gt;&#xA;&lt;p&gt;We get an IP adress target &lt;code&gt;$TARGET&lt;/code&gt; which we have to pwn.&lt;/p&gt;&#xA;&lt;p&gt;First, we make a simple nmap scan to get open services, versions and ports:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nmap -sV --open -oA start-skills-init-recon &lt;span class=&#34;nv&#34;&gt;$TARGET&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We get two services:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;PORT   STATE SERVICE VERSION&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Ubuntu Linux&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; protocol 2.0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;80/tcp open  http    Apache httpd 2.4.41 &lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;Ubuntu&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Service Info: OS: Linux&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; CPE: cpe:/o:linux:linux_kernel&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The second seems to be a web server, running a page as the port is 80, for http. We run&#xA;a scan with &lt;code&gt;whatweb&lt;/code&gt;:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
